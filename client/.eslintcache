[{"C:\\Users\\radhi\\HourApp\\client\\src\\index.js":"1","C:\\Users\\radhi\\HourApp\\client\\src\\App.js":"2","C:\\Users\\radhi\\HourApp\\client\\src\\components\\Preloader.js":"3","C:\\Users\\radhi\\HourApp\\client\\src\\components\\Footer.js":"4","C:\\Users\\radhi\\HourApp\\client\\src\\components\\Navbar.js":"5","C:\\Users\\radhi\\HourApp\\client\\src\\components\\SearchProfile.js":"6","C:\\Users\\radhi\\HourApp\\client\\src\\components\\Profile\\Profile.js":"7","C:\\Users\\radhi\\HourApp\\client\\src\\components\\Security\\Login.js":"8","C:\\Users\\radhi\\HourApp\\client\\src\\components\\Home\\Home.js":"9","C:\\Users\\radhi\\HourApp\\client\\src\\components\\Chat\\Chat.js":"10","C:\\Users\\radhi\\HourApp\\client\\src\\components\\Security\\Profile.js":"11","C:\\Users\\radhi\\HourApp\\client\\src\\components\\Projects\\Projects.js":"12","C:\\Users\\radhi\\HourApp\\client\\src\\components\\SocialMedia.js":"13","C:\\Users\\radhi\\HourApp\\client\\src\\utils\\mutations.js":"14","C:\\Users\\radhi\\HourApp\\client\\src\\components\\Home\\TypeWriter.js":"15","C:\\Users\\radhi\\HourApp\\client\\src\\components\\Profile\\ProfileCard.js":"16","C:\\Users\\radhi\\HourApp\\client\\src\\components\\Profile\\Techstack.js":"17","C:\\Users\\radhi\\HourApp\\client\\src\\components\\Projects\\ProjectCards.js":"18","C:\\Users\\radhi\\HourApp\\client\\src\\components\\Chat\\Message.js":"19","C:\\Users\\radhi\\HourApp\\client\\src\\utils\\queries.js":"20","C:\\Users\\radhi\\HourApp\\client\\src\\utils\\auth.js":"21","C:\\Users\\radhi\\HourApp\\client\\src\\components\\SkillsList\\index.js":"22","C:\\Users\\radhi\\HourApp\\client\\src\\components\\SkillForm\\index.js":"23","C:\\Users\\radhi\\HourApp\\client\\src\\components\\Security\\signup.js":"24"},{"size":221,"mtime":1651942156769,"results":"25","hashOfConfig":"26"},{"size":2297,"mtime":1652547776634,"results":"27","hashOfConfig":"26"},{"size":398,"mtime":1652413475118,"results":"28","hashOfConfig":"26"},{"size":613,"mtime":1651942156754,"results":"29","hashOfConfig":"26"},{"size":3984,"mtime":1652536369959,"results":"30","hashOfConfig":"26"},{"size":2226,"mtime":1652536369964,"results":"31","hashOfConfig":"26"},{"size":1070,"mtime":1652536370031,"results":"32","hashOfConfig":"26"},{"size":2625,"mtime":1652536509949,"results":"33","hashOfConfig":"26"},{"size":1374,"mtime":1652536369958,"results":"34","hashOfConfig":"26"},{"size":3579,"mtime":1652536369956,"results":"35","hashOfConfig":"26"},{"size":3321,"mtime":1652536369965,"results":"36","hashOfConfig":"26"},{"size":1409,"mtime":1652536369963,"results":"37","hashOfConfig":"26"},{"size":1412,"mtime":1651942156766,"results":"38","hashOfConfig":"26"},{"size":699,"mtime":1652413475131,"results":"39","hashOfConfig":"26"},{"size":434,"mtime":1652536369958,"results":"40","hashOfConfig":"26"},{"size":1097,"mtime":1652536370030,"results":"41","hashOfConfig":"26"},{"size":542,"mtime":1652536370027,"results":"42","hashOfConfig":"26"},{"size":681,"mtime":1652536442018,"results":"43","hashOfConfig":"26"},{"size":1667,"mtime":1652536369957,"results":"44","hashOfConfig":"26"},{"size":972,"mtime":1652536370012,"results":"45","hashOfConfig":"26"},{"size":1421,"mtime":1652536369971,"results":"46","hashOfConfig":"26"},{"size":601,"mtime":1652536369968,"results":"47","hashOfConfig":"26"},{"size":1412,"mtime":1652536369967,"results":"48","hashOfConfig":"26"},{"size":2737,"mtime":1652512566859,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1i84cd4",{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\radhi\\HourApp\\client\\src\\index.js",[],"C:\\Users\\radhi\\HourApp\\client\\src\\App.js",["106"],"import React, { useState, useEffect } from \"react\";\nimport Preloader from \"./components/Preloader\";\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./components/Home/Home\";\nimport Me from \"./components/Profile/Profile\";\nimport Login from \"./components/Security/Login\";\nimport Signup from \"./components/Security/signup\";\nimport Projects from \"./components/Projects/Projects\";\nimport Profile from \"./components/Security/Profile\";\nimport Footer from \"./components/Footer\";\nimport Chat from \"./components/Chat/Chat\"\n\nimport searchProfile from \"./components/SearchProfile\";\n\nimport \"./App.css\";\n\n\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./style.css\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { ApolloClient, InMemoryCache, ApolloProvider, createHttpLink,} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\n\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:3001/graphql'\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  const [load, upadateLoad] = useState(false);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      upadateLoad(false);\n    }, 1200);\n\n    return () => clearTimeout(timer);\n  }, []);\n\n  return (\n    <ApolloProvider client={client}>\n    <Router>\n      {load ? (\n        <Preloader load={load} />\n      ) : (\n        <div className=\"App\" id={load ? \"no-scroll\" : \"scroll\"}>\n          <Navbar />\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/project\" component={Projects} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/signup\" component={Signup} />\n            <Route path=\"/profiles/:profileId\" component={Profile} />\n            <Route path=\"/searchProfile\" component={searchProfile} />\n            <Route path=\"/chat\" component={Chat} />\n\n          </Switch>\n        </div>\n      )}\n    </Router>\n    <Footer/>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","C:\\Users\\radhi\\HourApp\\client\\src\\components\\Preloader.js",[],"C:\\Users\\radhi\\HourApp\\client\\src\\components\\Footer.js",[],"C:\\Users\\radhi\\HourApp\\client\\src\\components\\Navbar.js",["107","108"],"import React, { useState } from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Container from \"react-bootstrap/Container\";\nimport { Link } from \"react-router-dom\";\nimport { ImBlog } from \"react-icons/im\";\nimport {\n  AiOutlineHome,\n  AiOutlineFundProjectionScreen,\n  AiOutlineUser,\n  AiOutlineSearch,\n} from \"react-icons/ai\";\n\nimport Auth from \"../utils/auth\";\n\nimport { MdDeveloperMode } from \"react-icons/md\";\n\nimport { CgFileDocument } from \"react-icons/cg\";\n\nfunction NavBar() {\n  const logout = (event) => {\n    event.preventDefault();\n    Auth.logout();\n  };\n  const [expand, updateExpanded] = useState(false);\n  const [navColour, updateNavbar] = useState(false);\n\n  function scrollHandler() {\n    if (window.scrollY >= 20) {\n      updateNavbar(true);\n    } else {\n      updateNavbar(false);\n    }\n  }\n\n  window.addEventListener(\"scroll\", scrollHandler);\n\n  return (\n    <Navbar\n      expanded={expand}\n      fixed=\"top\"\n      expand=\"md\"\n      className={navColour ? \"sticky\" : \"navbar\"}\n    >\n      <Container>\n        <Navbar.Toggle\n          aria-controls=\"responsive-navbar-nav\"\n          onClick={() => {\n            updateExpanded(expand ? false : \"expanded\");\n          }}\n        >\n          <span></span>\n          <span></span>\n          <span></span>\n        </Navbar.Toggle>\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"ml-auto\" defaultActiveKey=\"#home\">\n            <Nav.Item>\n              <Nav.Link as={Link} to=\"/\" onClick={() => updateExpanded(false)}>\n                <AiOutlineHome style={{ marginBottom: \"2px\" }} /> Home\n              </Nav.Link>\n            </Nav.Item>\n\n            <Nav.Item>\n              <Nav.Link\n                as={Link}\n                to=\"/chat\"\n                onClick={() => updateExpanded(false)}\n              >\n                <CgFileDocument  style={{ marginBottom: \"2px\" }} /> Timesquare\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link\n               as={Link}\n               to=\"/searchProfile\"\n               onClick={() => updateExpanded(false)}\n              >\n                 <AiOutlineSearch\n                  style={{ marginBottom: \"2px\" }}\n                />{\" \"}\n               Search Profiles\n              </Nav.Link>\n            </Nav.Item>\n            {/* <Nav.Item>\n              <Nav.Link\n                as={Link}\n                to=\"/project\"\n                onClick={() => updateExpanded(false)}\n              >\n                <AiOutlineFundProjectionScreen\n                  style={{ marginBottom: \"2px\" }}\n                />{\" \"}\n                Profiles\n              </Nav.Link>\n            </Nav.Item> */}\n\n            {Auth.loggedIn() ? (\n            <><Nav.Item>\n            <Nav.Link\n              as={Link}\n              to=\"/profiles/:profileId\"\n              onClick={() => updateExpanded(false)}\n            >\n              <AiOutlineUser style={{ marginBottom: \"2px\" }} /> View Profile\n            </Nav.Link>\n          </Nav.Item>            <Nav.Item><button className=\"btn btn-lg btn-light m-2\" onClick={logout}>\n            Logout\n          </button></Nav.Item></>\n\n          ) : (\n            <><Nav.Item>\n                  <Nav.Link\n                    as={Link}\n                    to=\"/login\"\n                    onClick={() => updateExpanded(false)}\n                  >\n                    <AiOutlineUser style={{ marginBottom: \"2px\" }} /> Login\n                  </Nav.Link>\n                </Nav.Item><Nav.Item>\n                    <Nav.Link\n                    as={Link}\n                    to=\"/signup\"\n                    onClick={() => updateExpanded(false)}\n                    >\n                      <ImBlog style={{ marginBottom: \"2px\" }} /> Sign Up\n                    </Nav.Link>\n                  </Nav.Item></>\n          )}\n\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n\nexport default NavBar;\n","C:\\Users\\radhi\\HourApp\\client\\src\\components\\SearchProfile.js",["109"],"import React, { useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport ProjectCard from \"./Projects/ProjectCards\";\nimport Auth from \"../utils/auth\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from '@apollo/client';\nimport { QUERY_PROFILES } from '../utils/queries';\n\nfunction SearchProfiles() {\n    const { data, loading, error } = useQuery(QUERY_PROFILES);\n    const [searchTerm, setSearchTerm] = useState(\"\");\n\n    if (loading) return <h1>Loading...</h1>;\n    if (error) return <h1>An error occurred</h1>;\n\n    return (\n        <Container fluid className=\"project-section\">\n            {Auth.loggedIn() ? (\n                <Container>\n                    <h1 className=\"project-heading\">\n                        Search <strong className=\"purple\">People </strong>\n                    </h1>\n                    <p style={{ color: \"Black\" }}>\n                        Want to Learn Something New?\n                    </p>\n\n                    <input type=\"text\" placeholder=\"search...\" onChange={event => setSearchTerm(event.target.value)} />\n\n                    <Row style={{ justifyContent: \"center\", paddingBottom: \"10px\" }}>\n                        {data.profiles.filter((val) => {\n                        if (searchTerm === '') {\n                            return val;\n                        } else if (val.name.toLowerCase().includes(searchTerm.toLowerCase())) {\n                            return val;\n                        }\n                    }).map((project, index) => (\n                            <Col md={4} className=\"project-card\" key={index}>\n                                <ProjectCard\n                                    {...project}\n                                    isBlog={false}\n                                />\n                            </Col>\n                        ))}\n                    </Row>\n                </Container>\n            ) : (\n                <p>\n                    You need to be logged in to view and search Profiles. Please{' '}\n                    <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n                </p>\n            )}\n\n\n\n        </Container>\n    );\n}\n\nexport default SearchProfiles;\n\n","C:\\Users\\radhi\\HourApp\\client\\src\\components\\Profile\\Profile.js",["110"],"import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport Techstack from \"./Techstack\";\nimport ProfileCard from \"./ProfileCard\";\nimport developer from \"../../Assets/developer.jpg\";\n\nexport default function Profile() {\n  return (\n    <Container fluid className=\"about-section\">\n      <Container>\n        <Row style={{ justifyContent: \"center\", padding: \"10px\" }}>\n          <Col\n            md={7}\n            style={{\n              justifyContent: \"center\",\n              paddingTop: \"30px\",\n              paddingBottom: \"50px\",\n            }}\n          >\n            <h1 style={{ fontSize: \"2.1em\", paddingBottom: \"20px\" }}>\n              <strong className=\"purple\">HOUR APP</strong>\n            </h1>\n            <ProfileCard />\n          </Col>\n          <Col md={5} style={{ paddingBottom: \"50px\" }} className=\"about-img\">\n            <img src={developer} alt=\"about\" className=\"image-style\" />\n          </Col>\n        </Row>\n        <Row className=\"skill-tools-wrapper\">\n\n\n        </Row>\n      </Container>\n    </Container>\n  );\n}\n\n\n","C:\\Users\\radhi\\HourApp\\client\\src\\components\\Security\\Login.js",[],"C:\\Users\\radhi\\HourApp\\client\\src\\components\\Home\\Home.js",[],"C:\\Users\\radhi\\HourApp\\client\\src\\components\\Chat\\Chat.js",["111","112","113","114","115"],"import {React, useState} from \"react\";\nimport {Container, Row, Col, FormControl, FormGroup, Button, Input} from \"react-bootstrap\";\nimport Message from \"./Message\";\nimport { useMutation, gql } from \"@apollo/client\";\nimport { useQuery } from '@apollo/client';\nimport {QUERY_ME} from '../../utils/queries';\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\n\n\n\n\nconst POST_MESSAGE= gql`\nmutation($profileName: String!, $text: String!) {\n    postMessage(profileName: $profileName, text: $text) {\n      profileName\n      text\n    }\n  }`\n\n  export default function Chat () {\n    const {data, loading, error} = useQuery(QUERY_ME);\n    const [state, setState] = useState({\n        profileName: '',\n        text: '',\n    })\n    const [postMessage] = useMutation(POST_MESSAGE);\n\n    const onSend = () => {\n        console.log(state);\n        if(state.text.length > 0) {\n            postMessage({\n                variables: state\n            });\n        }\n        setState({\n            ...state,\n            text: '',\n        });\n    };\n    return (\n        <Container>\n        \n        {Auth.loggedIn() ? (\n            <Container style={{\n                border: '3px solid #091E05',\n                boxShadow:' 6px 5px 5px #091E05'}\n            }>\n                    <Message profileName={state.profileName}/>\n                    <Container style={{\n                        border: '2px solid #091E05'\n                    }}>\n                    <Row>\n                        <Col xs={2} style={{padding: 0}}>\n                            {console.log('inred==>>', data?.me?.name)}\n                            <input\n                            label=\"Name\"\n                            disabled={data?.me?.name}\n                            value={state.profileName || data?.me?.name}\n                            onChange= {(e) => setState({\n                                ...state,\n                                profileName: e.target.value,\n                            })}/>\n                        </Col>\n                        <Col xs={7} >\n                            <input style={{\n                                width: '90%',\n                                borderRadius: '25px',\n                                boxShadow: '2px 2px 2px black'\n                            }}\n                            placeholder=\"Enter Message Here\"\n                            label=\"Text\"\n                            value={state.text}\n                            onChange= {(e) => setState({\n                                ...state,\n                                text: e.target.value,\n                            })}\n                            onKeyUp={(e) => {\n                                if (e.key === 'Enter'){\n                                    onSend()\n                                }\n                            }}\n                            />\n                        </Col>\n                        <Col xs={3} style={{padding: 0}} >\n                            <Button style={{\n                                backgroundColor: \"#A4C2A5\"\n                            }} onClick={() => onSend()}>\n                            Send Message\n                            </Button>\n                        </Col>\n                    </Row>\n                    </Container>\n            </Container>\n        ) : (\n            <p>\n                You need to be logged in to view the Timesquare. Please{' '}\n                <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n            </p>\n        )}\n        </Container>\n    )\n}\n\n\n\n","C:\\Users\\radhi\\HourApp\\client\\src\\components\\Security\\Profile.js",["116","117","118"],"// import React from \"react\";\n// import { useParams } from 'react-router-dom';\n// import { useQuery } from '@apollo/client';\n\n\n// import { QUERY_USER, QUERY_ME, QUERY_PROFILES } from '../../utils/queries';\n\n// import Auth from '../../utils/auth';\n\n\n// export default function Profile() {\n//   const { username: userParam } = useParams();\n//   const { loading, data } = useQuery(userParam ? QUERY_USER : QUERY_ME, QUERY_PROFILES, {\n//     variables: { username: userParam },\n//   });\n\n//   const user = data?.me || data?.user || {};\n//   // navigate to personal profile page if username is yours\n//   if (Auth.loggedIn() && Auth.getProfile().data.username === userParam) {\n//     console.log('logged in still ')\n//     return;\n//   }\n\n//   if (loading) {\n//     return <div>Loading...</div>;\n//   }\n\n//   if (!user?.username) {\n//     return (\n//       <h4>\n//         You need to be logged in to see this. Use the navigation links above to\n//         sign up or log in!\n//       </h4>\n//     );\n//   }\n\n//     return (\n//       <div>\n//         <h1>Profile Page</h1>\n//         <p>\n//             logged in sucessfully \n//         </p>\n//       </div>\n//     );\n//   }\n\n//show all profiles \n\n// import React from 'react';\n// import ProfileList from './profileList';\n// import { useQuery } from '@apollo/client';\n// import { QUERY_PROFILES } from '../../utils/queries';\n\n// const Profile = () => {\n//   const { loading, data } = useQuery(QUERY_PROFILES);\n//   const profiles = data?.profiles || [];\n\n//   return (\n//     <main>\n//       <div className=\"flex-row justify-center\">\n//         <div className=\"col-12 col-md-10 my-3\">\n//           {loading ? (\n//             <div>Loading...</div>\n//           ) : (\n//             <ProfileList\n//               profiles={profiles}\n//               title=\"Connect With Each Other\"\n//             />\n//           )}\n//         </div>\n//       </div>\n//     </main>\n//   );\n// };\n\n// export default Profile;\n\n\n//show single a profile\n\nimport React from 'react';\nimport '../Security/profile.css'\n// Import the `useParams()` hook\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport SkillsList from '../../components/SkillsList';\nimport SkillForm from '../../components/SkillForm';\n\nimport { QUERY_SINGLE_PROFILE } from '../../utils/queries';\n\nconst Profile = () => {\n  // Use `useParams()` to retrieve value of the route parameter `:profileId`\n  //const { profileId } = useParams();\n  //console.log(profileId);\n  const [profileData, setProfileData] = useState({})\n  const { loading, data } = useQuery(QUERY_SINGLE_PROFILE, {\n    // pass URL parameter\n    variables: { profileId: localStorage.getItem(\"uuid\") },\n  });\n\n  const profile = data?.profile || {};\n  //setProfileData(profile)\n  console.log(profile)\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n  return (\n    <div>\n      <h2 className=\"card-header\">\n        Name: {profile.name}\n      </h2>\n      <h3 className='card-body'>\n        Interests: {profile.skills.join(\",\")} </h3>\n\n      {profile.skills?.length > 0 && <SkillsList skills={profile.skills} />}\n\n      <div className=\"my-4 p-4\" style={{ border: '1px dotted #1a1a1a' }}>\n        <SkillForm profileId={profile._id} />\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","C:\\Users\\radhi\\HourApp\\client\\src\\components\\Projects\\Projects.js",[],"C:\\Users\\radhi\\HourApp\\client\\src\\components\\SocialMedia.js",[],"C:\\Users\\radhi\\HourApp\\client\\src\\utils\\mutations.js",[],"C:\\Users\\radhi\\HourApp\\client\\src\\components\\Home\\TypeWriter.js",[],"C:\\Users\\radhi\\HourApp\\client\\src\\components\\Profile\\ProfileCard.js",[],"C:\\Users\\radhi\\HourApp\\client\\src\\components\\Profile\\Techstack.js",[],"C:\\Users\\radhi\\HourApp\\client\\src\\components\\Projects\\ProjectCards.js",["119","120"],"import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport { BiLinkExternal } from \"react-icons/bi\";\n\n\nfunction ProjectCards(props) {\n  return (\n    <Card className=\"project-card-view\">\n      <Card.Body>\n        <Card.Title style={{fontWeight: \"bold\"}}>{props.name}</Card.Title>\n        <Card.Text style={{fontWeight: \"bold\"}}>{props.email}</Card.Text>\n        <Card.Text className=\"purple\">Interests: &nbsp;   {props.skills.join(', ')}</Card.Text>\n        <Card.Text style={{ textAlign: \"justify\" }}>\n          {props.description}\n        </Card.Text>\n      </Card.Body>\n    </Card>\n  );\n}\nexport default ProjectCards;\n","C:\\Users\\radhi\\HourApp\\client\\src\\components\\Chat\\Message.js",[],"C:\\Users\\radhi\\HourApp\\client\\src\\utils\\queries.js",[],"C:\\Users\\radhi\\HourApp\\client\\src\\utils\\auth.js",[],"C:\\Users\\radhi\\HourApp\\client\\src\\components\\SkillsList\\index.js",[],"C:\\Users\\radhi\\HourApp\\client\\src\\components\\SkillForm\\index.js",["121"],"import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_SKILL } from '../../utils/mutations';\n\nconst SkillForm = ({ profileId }) => {\n  const [skill, setSkill] = useState('');\n\n  const [addSkill, { error }] = useMutation(ADD_SKILL);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addSkill({\n        variables: { profileId, skill },\n      });\n\n      setSkill('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div>\n      <h4> What Skills Do You Bring To the Hour Community? </h4>\n      <form\n        className=\"flex-row justify-center justify-space-between-md align-center\"\n        onSubmit={handleFormSubmit}\n      >\n        <div className=\"col-12 col-lg-9\">\n          <input\n            placeholder=\"Share here...\"\n            value={skill}\n            className=\"form-input w-100\"\n            onChange={(event) => setSkill(event.target.value)}\n          />\n        </div>\n\n        <div className=\"col-12 col-lg-3\">\n          <button className=\"btn btn-info btn-block py-3\" type=\"submit\">\n            What Skills do you have?\n          </button>\n        </div>\n        {error && (\n          <div className=\"col-12 my-3 bg-danger text-white p-3\">\n            Something went wrong...\n          </div>\n        )}\n      </form>\n    </div>\n  );\n};\n\nexport default SkillForm;\n","C:\\Users\\radhi\\HourApp\\client\\src\\components\\Security\\signup.js",[],{"ruleId":"122","severity":1,"message":"123","line":5,"column":8,"nodeType":"124","messageId":"125","endLine":5,"endColumn":10},{"ruleId":"122","severity":1,"message":"126","line":9,"column":3,"nodeType":"124","messageId":"125","endLine":9,"endColumn":32},{"ruleId":"122","severity":1,"message":"127","line":16,"column":10,"nodeType":"124","messageId":"125","endLine":16,"endColumn":25},{"ruleId":"128","severity":1,"message":"129","line":30,"column":53,"nodeType":"130","messageId":"131","endLine":30,"endColumn":55},{"ruleId":"122","severity":1,"message":"132","line":3,"column":8,"nodeType":"124","messageId":"125","endLine":3,"endColumn":17},{"ruleId":"122","severity":1,"message":"133","line":2,"column":30,"nodeType":"124","messageId":"125","endLine":2,"endColumn":41},{"ruleId":"122","severity":1,"message":"134","line":2,"column":43,"nodeType":"124","messageId":"125","endLine":2,"endColumn":52},{"ruleId":"122","severity":1,"message":"135","line":2,"column":62,"nodeType":"124","messageId":"125","endLine":2,"endColumn":67},{"ruleId":"122","severity":1,"message":"136","line":23,"column":18,"nodeType":"124","messageId":"125","endLine":23,"endColumn":25},{"ruleId":"122","severity":1,"message":"137","line":23,"column":27,"nodeType":"124","messageId":"125","endLine":23,"endColumn":32},{"ruleId":"122","severity":1,"message":"138","line":85,"column":10,"nodeType":"124","messageId":"125","endLine":85,"endColumn":19},{"ruleId":"122","severity":1,"message":"139","line":97,"column":10,"nodeType":"124","messageId":"125","endLine":97,"endColumn":21},{"ruleId":"122","severity":1,"message":"140","line":97,"column":23,"nodeType":"124","messageId":"125","endLine":97,"endColumn":37},{"ruleId":"122","severity":1,"message":"141","line":3,"column":8,"nodeType":"124","messageId":"125","endLine":3,"endColumn":14},{"ruleId":"122","severity":1,"message":"142","line":4,"column":10,"nodeType":"124","messageId":"125","endLine":4,"endColumn":24},{"ruleId":"122","severity":1,"message":"143","line":15,"column":15,"nodeType":"124","messageId":"125","endLine":15,"endColumn":19},"no-unused-vars","'Me' is defined but never used.","Identifier","unusedVar","'AiOutlineFundProjectionScreen' is defined but never used.","'MdDeveloperMode' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Techstack' is defined but never used.","'FormControl' is defined but never used.","'FormGroup' is defined but never used.","'Input' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'useParams' is defined but never used.","'profileData' is assigned a value but never used.","'setProfileData' is assigned a value but never used.","'Button' is defined but never used.","'BiLinkExternal' is defined but never used.","'data' is assigned a value but never used."]